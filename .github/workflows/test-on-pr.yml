name: Test on Pull Request

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run database migrations
        run: |
          # Create test database
          touch test.db
          # Run migrations if sqlx-cli is needed
          if [ -d "migrations" ]; then
            cargo install sqlx-cli --no-default-features --features sqlite
            sqlx database create --database-url sqlite://test.db
            sqlx migrate run --database-url sqlite://test.db
          fi

      - name: Run tests
        run: cargo test --verbose --all-features

      - name: Build project
        run: cargo build --release --verbose